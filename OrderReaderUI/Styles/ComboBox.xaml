<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- ComboBox Toggle Button -->
    <ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="ComboBoxToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="30" />
            </Grid.ColumnDefinitions>
            <Border x:Name="border"
                Grid.ColumnSpan="2"
                CornerRadius="5"
                BorderBrush="{DynamicResource Control.Brush}"
                BorderThickness="1"
                Background="{DynamicResource Background.Panel.Brush}"/>
            <TextBlock x:Name="chevron"
                   FontFamily="{StaticResource IconFontSolid}"
                   FontSize="{TemplateBinding FontSize}"
                   Text="{StaticResource IconCaretDown}"
                   Foreground="{DynamicResource Control.Brush}"
                   Grid.Column="1"
                   VerticalAlignment="Center"
                   HorizontalAlignment="Center"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" TargetName="chevron" Value="{DynamicResource ControlLight.Brush}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" TargetName="chevron" Value="{DynamicResource ControlDark.Brush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" TargetName="chevron" Value="{DynamicResource ControlDisabled.Brush}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ControlDisabled.Brush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- ComboBox Text Box -->
    <ControlTemplate TargetType="{x:Type TextBox}" x:Key="ComboBoxTextBox">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" Padding="10"/>
    </ControlTemplate>

    <!-- ComboBox -->
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
        <Setter Property="Foreground" Value="{DynamicResource Foreground.Brush}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSize.Regular}"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="MinWidth" Value="60"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton"
                                  Template="{StaticResource ComboBoxToggleButton}"
                                  Focusable="False"
                                  ClickMode="Press"
                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ContentPresenter x:Name="ContentSite"
                                      IsHitTestVisible="False"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                      Margin="{TemplateBinding Padding}"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Left">
                            <ContentPresenter.Resources>
                                <Style TargetType="TextBlock"/>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                        <Popup x:Name="Popup"
                           Placement="Bottom"
                           IsOpen="{TemplateBinding IsDropDownOpen}"
                           AllowsTransparency="True"
                           Focusable="False"
                           PopupAnimation="Slide">
                            <Grid x:Name="DropDown"
                              SnapsToDevicePixels="True"
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                    BorderThickness="1"
                                    Margin="0"
                                    BorderBrush="{DynamicResource Control.Brush}"
                                    Background="{DynamicResource Background.Panel.Brush}"/>
                                <ScrollViewer Margin="10 2.5 10 7.5" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="50"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="5"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="5 0 5 5"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextBox.Foreground" TargetName="ContentSite" Value="{DynamicResource ControlDisabled.Brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ComboBox Item -->
    <Style TargetType="{x:Type ComboBoxItem}" x:Key="{x:Type ComboBoxItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Padding="10 5"
                            Margin="0 2.5"
                            CornerRadius="3"
                            SnapsToDevicePixels="True"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="content">
                            <ContentPresenter.Resources>
                                <Style TargetType="TextBlock"/>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ControlLight.Brush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource Accent.Foreground.Brush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Control.Brush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource Accent.Foreground.Brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>