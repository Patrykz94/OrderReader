<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ap="clr-namespace:OrderReader.AttachedProperties">

    <!-- Navigation Button -->
    <Style TargetType="{x:Type RadioButton}" x:Key="NavButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource Foreground.Brush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSize.Large}"/>
        <Setter Property="Margin" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Border Name="backgroundBorder"
                                BorderThickness="0"
                                Background="{TemplateBinding Background}"
                                CornerRadius="8"
                                Margin="10 5"/>
                        
                        <Grid Margin="20" Height="40">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            
                            
                            <TextBlock Grid.Column="0" x:Name="IconForeground"
                                       Foreground="{TemplateBinding Foreground}"
                                       Text="{TemplateBinding Tag}"
                                       FontFamily="{StaticResource IconFontSolid}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontSize="{TemplateBinding FontSize}"/>

                            <TextBlock Grid.Column="1"
                                       Text="{TemplateBinding Content}"
                                       Foreground="{TemplateBinding Foreground}"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       FontSize="{TemplateBinding FontSize}"/>
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource NavButton.Hover.Brush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource NavButton.Hover.Foreground.Brush}"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource NavButton.Selected.Brush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource NavButton.Hover.Foreground.Brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Theme Selection Button -->
    <Style TargetType="{x:Type RadioButton}" x:Key="ThemeButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="{DynamicResource Background.Panel.Brush}"/>
        <Setter Property="Foreground" Value="{DynamicResource Foreground.Brush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSize.Large}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Margin" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="10"
                            Margin="10 10">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="{DynamicResource Shadow.Color}" Opacity="0.4"/>
                        </Border.Effect>

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Border Grid.Row="0" ClipToBounds="True"
                                    Margin="3" CornerRadius="7" BorderThickness="0" Height="100">
                                <ContentPresenter SnapsToDevicePixels="True"/>
                            </Border>
                            
                            <TextBlock Grid.Row="1"
                                       Text="{TemplateBinding Tag}"
                                       Foreground="{TemplateBinding Foreground}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       SnapsToDevicePixels="True"
                                       Margin="0 5"
                                       FontSize="{TemplateBinding FontSize}"/> 
                        </Grid>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ControlLight.Brush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource Accent.Foreground.Brush}"/>
                            <Setter Property="Effect" TargetName="border">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="{Binding RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}, Path=Background}" Opacity="0.2"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Control.Brush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource Accent.Foreground.Brush}"/>
                            <Setter Property="Effect" TargetName="border">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="{Binding RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}, Path=Background}" Opacity="0.2"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Accent Selection Button -->
    <Style TargetType="{x:Type RadioButton}" x:Key="AccentButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Foreground" Value="{DynamicResource Accent.Foreground.Brush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSize.Large}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Margin" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="border"
                            CornerRadius="10"
                            Height="75"
                            Margin="10 10">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="{DynamicResource Shadow.Color}" Opacity="0.4"/>
                        </Border.Effect>
                        <Border.OpacityMask>
                            <VisualBrush>
                                <VisualBrush.Visual>
                                    <Border Background="Black"
                                            SnapsToDevicePixels="True"
                                            CornerRadius="{Binding CornerRadius, RelativeSource={RelativeSource AncestorType=Border}}"
                                            Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Border}}"
                                            Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Border}}"/>
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </Border.OpacityMask>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition x:Name="centre"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <Border Grid.Column="0" Background="{Binding RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}, Path=(ap:MultiColorButton.Column1Background)}"/>
                            <Border Grid.Column="1" Background="{Binding RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}, Path=(ap:MultiColorButton.Column2Background)}"/>
                            <Border Grid.Column="2" Background="{Binding RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}, Path=(ap:MultiColorButton.Column3Background)}"/>

                            <TextBlock Grid.Column="0" Grid.ColumnSpan="3"
                                       Text="{TemplateBinding Content}"
                                       Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}, Path=Foreground}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       FontSize="{TemplateBinding FontSize}"/>
                        </Grid>

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Effect" TargetName="border">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="{Binding RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}, Path=(ap:MultiColorButton.Column2Background).Color}" Opacity="1"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Effect" TargetName="border">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="{Binding RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}, Path=(ap:MultiColorButton.Column2Background).Color}" Opacity="1"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FontWeight" Value="Medium"/>
                            <Setter TargetName="centre" Property="Width" Value="2*"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Default Button -->
    <Style TargetType="{x:Type Button}" x:Key="DefaultButton">
        <Setter Property="Background" Value="{DynamicResource Control.Brush}"/>
        <Setter Property="Foreground" Value="{DynamicResource Accent.Foreground.Brush}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSize.Large}"/>
        <Setter Property="Padding" Value="10 5"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="5"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid>
                            <ContentPresenter VerticalAlignment="Center"
                                              HorizontalAlignment="Center"
                                              Margin="{TemplateBinding Padding}">
                                <ContentPresenter.Resources>
                                    <Style TargetType="TextBlock"/>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ControlLight.Brush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ControlDark.Brush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource ControlDisabled.Brush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource Accent.Foreground.Secondary.Brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButton}"/>

    <!-- Alternative Button -->
    <Style TargetType="{x:Type Button}" x:Key="AltButton" BasedOn="{StaticResource DefaultButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource Control.Brush}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Control.Brush}"/>
                <Setter Property="Foreground" Value="{DynamicResource Accent.Foreground.Brush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource ControlLight.Brush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Combo Button -->
    <Style TargetType="{x:Type Button}" x:Key="ComboButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource Control.Brush}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSize.Large}"/>
        <Setter Property="Padding" Value="10 5"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="BorderThickness" Value="0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="5"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            
                            <TextBlock Name="label" Grid.Column="0" Text="{TemplateBinding Tag}"
                                       FontSize="{TemplateBinding FontSize}"
                                       VerticalAlignment="Center" Foreground="{TemplateBinding Foreground}"
                                       Margin="5 0 0 0" Padding="5 0 0 0"
                                       Visibility="Collapsed"/>
                            
                            <ContentPresenter Grid.Column="1" VerticalAlignment="Center"
                                              HorizontalAlignment="Center"
                                              Margin="{TemplateBinding Padding}"
                                              TextBlock.FontFamily="{StaticResource IconFontSolid}">
                                <ContentPresenter.Resources>
                                    <Style TargetType="TextBlock"/>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource Control.Brush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource Accent.Foreground.Brush}"/>
                            <Setter TargetName="label" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ControlLight.Brush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource ControlDisabled.Brush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource Accent.Foreground.Secondary.Brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Table Control Buttons -->
    <Style TargetType="{x:Type Button}" x:Key="ProcessOrderButton">
        <Setter Property="Background" Value="{DynamicResource Background.Panel.Brush}"/>
        <Setter Property="Foreground" Value="{DynamicResource Foreground.Brush}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSize.Regular}"/>
        <Setter Property="Padding" Value="20 5"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="20" ShadowDepth="0" Color="{DynamicResource Shadow.Color}" Opacity="0.1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="10"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid>
                            <ContentPresenter VerticalAlignment="Center"
                                              HorizontalAlignment="Center"
                                              Margin="{TemplateBinding Padding}">
                                <ContentPresenter.Resources>
                                    <Style TargetType="TextBlock"/>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource OrderButton.Process.Hover.Brush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource OrderButton.Foreground.Brush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource OrderButton.Process.Hover.Brush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource OrderButton.Foreground.Brush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource ControlDisabled.Brush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource Accent.Foreground.Secondary.Brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type Button}" x:Key="DeleteOrderButton" BasedOn="{StaticResource ProcessOrderButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="10"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid>
                            <ContentPresenter VerticalAlignment="Center"
                                              HorizontalAlignment="Center"
                                              Margin="{TemplateBinding Padding}">
                                <ContentPresenter.Resources>
                                    <Style TargetType="TextBlock"/>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource OrderButton.Delete.Hover.Brush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource OrderButton.Foreground.Brush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource OrderButton.Delete.Hover.Brush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource OrderButton.Foreground.Brush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource ControlDisabled.Brush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource Accent.Foreground.Secondary.Brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ListBox Delete Button -->
    <Style TargetType="{x:Type Button}" x:Key="ListBoxDeleteButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource Accent.Foreground.Brush}"/>
        <Setter Property="Padding" Value="10 3"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="{StaticResource IconFontSolid}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSize.Small}"/>
        <Setter Property="Content" Value="{StaticResource IconDelete}"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        
                        <Border Grid.Column="0" Grid.ColumnSpan="2"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}"/>
                        
                        <Border Grid.Column="0" Margin="0 3" Opacity="0.35"
                                Background="{DynamicResource Accent.Foreground.Brush}"/>
                        
                        <ContentPresenter  Grid.Column="1"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center"
                                           Margin="{TemplateBinding Padding}">
                            <ContentPresenter.Resources>
                                <Style TargetType="TextBlock"/>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}}" Value="true">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ControlLight.Brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Toggle Button -->
    <Style TargetType="{x:Type ToggleButton}">
        <Setter Property="Margin" Value="5"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="50"/>
                        </Grid.ColumnDefinitions>

                        <TextBlock Text="{TemplateBinding Content}" Margin="0"/>

                        <Border x:Name="slider" Grid.Column="1"
                                Background="{DynamicResource ControlDisabled.Brush}"
                                Height="20"
                                CornerRadius="10"
                                Margin="2 0"/>
                        <Border x:Name="handle" Grid.Column="1"
                                Background="{DynamicResource ControlAlternative.Brush}"
                                BorderBrush="{DynamicResource ControlDisabled.Brush}"
                                BorderThickness="1"
                                Height="24"
                                Width="24"
                                CornerRadius="12"
                                HorizontalAlignment="Left"
                                SnapsToDevicePixels="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="HorizontalAlignment" TargetName="handle" Value="Right"/>
                            <Setter Property="Background" TargetName="slider" Value="{DynamicResource Control.Brush}"/>
                            <Setter Property="BorderBrush" TargetName="handle" Value="{DynamicResource Control.Brush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="handle" Value="{DynamicResource ControlDisabledAlternative.Brush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="slider" Value="{DynamicResource ControlDark.Brush}"/>
                            <Setter Property="BorderBrush" TargetName="handle" Value="{DynamicResource ControlDisabled.Brush}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Checkbox Button -->
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Control.Brush}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSize.Regular}"/>
        <Setter Property="Margin" Value="5"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        
                        <TextBlock Text="{TemplateBinding Content}" Margin="0"/>

                        <Border Grid.Column="1"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Width="26" Height="26"
                                CornerRadius="5"
                                Background="{TemplateBinding Background}">
                            <TextBlock x:Name="checkMark" Grid.Column="1"
                                       Visibility="Collapsed"
                                       FontFamily="{StaticResource IconFontSolid}"
                                       Text="{StaticResource IconCheckMark}"
                                       Margin="0"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Foreground="{TemplateBinding BorderBrush}"
                                       Focusable="False"/>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="checkMark" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" Value="{DynamicResource ControlDisabled.Brush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>